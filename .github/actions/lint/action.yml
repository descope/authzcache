name: Lint
description: "Run Go linting and security checks"

runs:
  using: "composite"
  steps:
    - name: Auth Setup
      id: auth
      uses: ./.github/actions/auth-setup
      env:
        RELEASE_APP_ID: ${{ env.RELEASE_APP_ID }}
        RELEASE_APP_PEM: ${{ env.RELEASE_APP_PEM }}

    - name: Setup Go
      uses: actions/setup-go@d35c59abb061a4a6fb18e82ac0862c26744d6ab5 # v5.5.0
      with:
        go-version-file: go.mod
        cache: true

    - name: Download dependencies
      env:
        GOPRIVATE: github.com/descope/*
      run: |
        go mod download
        go mod verify
      shell: bash

    - name: Run golangci-lint
      uses: reviewdog/action-golangci-lint@f9bba13753278f6a73b27a56a3ffb1bfda90ed71 # v2.8.0
      env:
        TAR_OPTIONS: --skip-old-files
        GOPRIVATE: github.com/descope/*
      with:
        github_token: ${{ github.token }}
        fail_level: any
        golangci_lint_flags: "--config=./scripts/lint/.golangci.yml"
        filter_mode: nofilter
        reporter: github-check
        golangci_lint_version: v1.64.8

    - name: Run go vet
      env:
        GOPRIVATE: github.com/descope/*
      run: go vet ./...
      shell: bash

    - name: Check formatting
      env:
        GOPRIVATE: github.com/descope/*
      run: |
        if [ "$(gofmt -l . | wc -l)" -gt 0 ]; then
          echo "Files not formatted properly:"
          gofmt -l .
          exit 1
        fi
      shell: bash
