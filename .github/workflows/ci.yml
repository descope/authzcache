name: CI

on: push

env:
  GO_VERSION: ${{ vars.GO_VERSION }}
  SCRIPTS_DIR: ./vendor/github.com/descope/common
  DATABASE_PASSWORD: passwordless

jobs:
  generate-token:
    name: Generate GitHub App Token
    runs-on: ubuntu-latest
    permissions:
      contents: read
    outputs:
      token: ${{ steps.generate_token.outputs.token }}
    steps:
      - name: Generate token
        id: generate_token
        uses: tibdex/github-app-token@3beb63f4bd073e61482598c45c71c1019b59b73a # v2.1.0
        with:
          app_id: ${{ secrets.RELEASE_APP_ID }}
          private_key: ${{ secrets.RELEASE_APP_PEM }}

      - name: Verify token generation
        run: |
          echo "Raw token output: '${{ steps.generate_token.outputs.token }}'"
          echo "Token length: ${#TOKEN}"
          if [ -n "${{ steps.generate_token.outputs.token }}" ]; then
            echo "✅ Token generated successfully"
          else
            echo "❌ Token generation failed"
            exit 1
          fi
        env:
          TOKEN: ${{ steps.generate_token.outputs.token }}

  build:
    name: Build
    runs-on: ubuntu-latest
    needs: generate-token
    permissions:
      contents: read
    env:
      GITHUB_TOKEN: ${{ needs.generate-token.outputs.token }}
    steps:
      - name: Debug token availability
        run: |
          echo "Token available: ${{ needs.generate-token.outputs.token != '' }}"
          echo "Raw token from needs: '${{ needs.generate-token.outputs.token }}'"
          echo "GITHUB_TOKEN env var: '${GITHUB_TOKEN}'"
          echo "Token length: ${#GITHUB_TOKEN}"
          echo "Needs context: ${{ toJson(needs) }}"

      - name: Checkout code
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          token: ${{ needs.generate-token.outputs.token }}

      - name: Checkout common scripts as vendor
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          repository: descope/common
          token: ${{ needs.generate-token.outputs.token }}
          path: vendor/github.com/descope/common

      - name: Set up Go
        uses: actions/setup-go@0a12ed9d6a96ab950c8f026ed9f722fe0da7ef32 # v5.0.2
        with:
          go-version: ${{ env.GO_VERSION }}
          cache: true
          check-latest: true

      - name: Configure Git for private repos
        run: |
          git config --global url."https://x-access-token:${GITHUB_TOKEN}@github.com/descope".insteadOf "https://github.com/descope"

      - name: Download and vendor dependencies
        run: |
          go mod download
          go mod vendor

      - name: Build using vendor approach
        run: |
          make build


  lint:
    name: Lint and more checks
    runs-on: ubuntu-latest
    needs: generate-token
    permissions:
      contents: read
    env:
      GITHUB_TOKEN: ${{ needs.generate-token.outputs.token }}
    steps:
      - name: Checkout code
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          token: ${{ needs.generate-token.outputs.token }}

      - name: Checkout common scripts as vendor
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          repository: descope/common
          token: ${{ needs.generate-token.outputs.token }}
          path: vendor/github.com/descope/common

      - name: Set up Go
        uses: actions/setup-go@0a12ed9d6a96ab950c8f026ed9f722fe0da7ef32 # v5.0.2
        with:
          go-version: ${{ env.GO_VERSION }}
          cache: true
          check-latest: true

      - name: Configure Git for private repos
        run: |
          git config --global url."https://x-access-token:${GITHUB_TOKEN}@github.com/descope".insteadOf "https://github.com/descope"

      - name: Download and vendor dependencies
        run: |
          go mod download
          go mod vendor

      - name: Lint using vendor approach
        run: |
          chmod +x vendor/github.com/descope/common/build/ci/build_lint.sh
          vendor/github.com/descope/common/build/ci/build_lint.sh

  test:
    name: Run Tests
    runs-on: ubuntu-latest
    needs: generate-token
    permissions:
      contents: read
    env:
      GITHUB_TOKEN: ${{ needs.generate-token.outputs.token }}
    steps:
      - name: Checkout code
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          token: ${{ needs.generate-token.outputs.token }}

      - name: Checkout common scripts as vendor
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          repository: descope/common
          token: ${{ needs.generate-token.outputs.token }}
          path: vendor/github.com/descope/common

      - name: Set up Go
        uses: actions/setup-go@0a12ed9d6a96ab950c8f026ed9f722fe0da7ef32 # v5.0.2
        with:
          go-version: ${{ env.GO_VERSION }}
          cache: true
          check-latest: true

      - name: Configure Git for private repos
        run: |
          git config --global url."https://x-access-token:${GITHUB_TOKEN}@github.com/descope".insteadOf "https://github.com/descope"

      - name: Download and vendor dependencies
        run: |
          go mod download
          go mod vendor

      - name: Run Tests using vendor approach
        run: |
          chmod +x vendor/github.com/descope/common/build/ci/build_test.sh
          vendor/github.com/descope/common/build/ci/build_test.sh
        env:
          DATABASE_PASSWORD: ${{ env.DATABASE_PASSWORD }}

  security:
    name: Run Security checks
    runs-on: ubuntu-latest
    needs: generate-token
    permissions:
      contents: read
    env:
      GITHUB_TOKEN: ${{ needs.generate-token.outputs.token }}
    steps:
      - name: Checkout code
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          token: ${{ needs.generate-token.outputs.token }}

      - name: Checkout common scripts as vendor
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          repository: descope/common
          token: ${{ needs.generate-token.outputs.token }}
          path: vendor/github.com/descope/common

      - name: Set up Go
        uses: actions/setup-go@0a12ed9d6a96ab950c8f026ed9f722fe0da7ef32 # v5.0.2
        with:
          go-version: ${{ env.GO_VERSION }}
          cache: true
          check-latest: true

      - name: Configure Git for private repos
        run: |
          git config --global url."https://x-access-token:${GITHUB_TOKEN}@github.com/descope".insteadOf "https://github.com/descope"

      - name: Download and vendor dependencies
        run: |
          go mod download
          go mod vendor

      - name: Run Security checks using vendor approach
        run: |
          chmod +x vendor/github.com/descope/common/build/ci/build_security.sh
          vendor/github.com/descope/common/build/ci/build_security.sh

  pack:
    name: Pack and Upload
    runs-on: ubuntu-latest
    needs: [generate-token, build]
    permissions:
      packages: write
      contents: read
      id-token: write
      attestations: write
    env:
      GITHUB_TOKEN: ${{ needs.generate-token.outputs.token }}
    steps:
      - name: Checkout code
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          token: ${{ needs.generate-token.outputs.token }}

      - name: Checkout common scripts as vendor
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          repository: descope/common
          token: ${{ needs.generate-token.outputs.token }}
          path: vendor/github.com/descope/common

      - name: Pack and Upload using vendor approach
        run: |
          make build

