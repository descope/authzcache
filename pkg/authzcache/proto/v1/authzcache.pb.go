// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.5
// 	protoc        v5.29.2
// source: authzcache.proto

package v1

import (
	v1 "github.com/descope/authzservice/pkg/authzservice/proto/v1"
	_ "github.com/descope/protoc-gen-mocker/mocker"
	_ "github.com/descope/protoc-gen-validate/proto"
	_ "github.com/google/gnostic/openapiv3"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

var File_authzcache_proto protoreflect.FileDescriptor

var file_authzcache_proto_rawDesc = string([]byte{
	0x0a, 0x10, 0x61, 0x75, 0x74, 0x68, 0x7a, 0x63, 0x61, 0x63, 0x68, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x12, 0x08, 0x61, 0x75, 0x74, 0x68, 0x7a, 0x63, 0x76, 0x31, 0x1a, 0x1c, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x0c, 0x6d, 0x6f, 0x63, 0x6b,
	0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1b, 0x6f, 0x70, 0x65, 0x6e, 0x61, 0x70,
	0x69, 0x76, 0x33, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x0e, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x0e, 0x76, 0x31, 0x2f, 0x61, 0x75, 0x74, 0x68, 0x7a, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x32, 0xb2, 0x08, 0x0a, 0x0a, 0x41, 0x75, 0x74, 0x68, 0x7a, 0x43,
	0x61, 0x63, 0x68, 0x65, 0x12, 0x85, 0x02, 0x0a, 0x0f, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x46,
	0x47, 0x41, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x12, 0x1d, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x7a,
	0x76, 0x31, 0x2e, 0x53, 0x61, 0x76, 0x65, 0x44, 0x53, 0x4c, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x61,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1e, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x7a, 0x76,
	0x31, 0x2e, 0x53, 0x61, 0x76, 0x65, 0x44, 0x53, 0x4c, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0xb2, 0x01, 0xba, 0x47, 0x90, 0x01, 0x12, 0x1b,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x20, 0x74, 0x68, 0x65, 0x20, 0x67, 0x69, 0x76, 0x65, 0x6e,
	0x20, 0x46, 0x47, 0x41, 0x20, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x1a, 0x1c, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x20, 0x74, 0x68, 0x65, 0x20, 0x67, 0x69, 0x76, 0x65, 0x6e, 0x20, 0x46, 0x47,
	0x41, 0x20, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x2e, 0x2a, 0x0f, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x46, 0x47, 0x41, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x5a, 0x1a, 0x0a, 0x18, 0x0a, 0x14,
	0x41, 0x75, 0x74, 0x68, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x4d, 0x67, 0x6d,
	0x74, 0x4b, 0x65, 0x79, 0x12, 0x00, 0x6a, 0x16, 0x0a, 0x0d, 0x78, 0x2d, 0x70, 0x75, 0x62, 0x6c,
	0x69, 0x73, 0x68, 0x59, 0x61, 0x6d, 0x6c, 0x12, 0x05, 0x12, 0x03, 0x66, 0x67, 0x61, 0x6a, 0x0e,
	0x0a, 0x07, 0x78, 0x2d, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x12, 0x03, 0x12, 0x01, 0x31, 0x82, 0xd3,
	0xe4, 0x93, 0x02, 0x18, 0x3a, 0x01, 0x2a, 0x22, 0x13, 0x2f, 0x76, 0x31, 0x2f, 0x6d, 0x67, 0x6d,
	0x74, 0x2f, 0x66, 0x67, 0x61, 0x2f, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x12, 0x8a, 0x02, 0x0a,
	0x12, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x46, 0x47, 0x41, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x12, 0x1c, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x7a, 0x76, 0x31, 0x2e, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x54, 0x75, 0x70, 0x6c, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x1d, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x7a, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x54, 0x75, 0x70, 0x6c, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0xb6, 0x01, 0xba, 0x47, 0x91, 0x01, 0x12, 0x1a, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x20,
	0x74, 0x68, 0x65, 0x20, 0x67, 0x69, 0x76, 0x65, 0x6e, 0x20, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x1a, 0x1b, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x20, 0x74, 0x68, 0x65, 0x20,
	0x67, 0x69, 0x76, 0x65, 0x6e, 0x20, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e,
	0x2a, 0x12, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x46, 0x47, 0x41, 0x52, 0x65, 0x6c, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x5a, 0x1a, 0x0a, 0x18, 0x0a, 0x14, 0x41, 0x75, 0x74, 0x68, 0x50, 0x72,
	0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x4d, 0x67, 0x6d, 0x74, 0x4b, 0x65, 0x79, 0x12, 0x00,
	0x6a, 0x16, 0x0a, 0x0d, 0x78, 0x2d, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x59, 0x61, 0x6d,
	0x6c, 0x12, 0x05, 0x12, 0x03, 0x66, 0x67, 0x61, 0x6a, 0x0e, 0x0a, 0x07, 0x78, 0x2d, 0x6f, 0x72,
	0x64, 0x65, 0x72, 0x12, 0x03, 0x12, 0x01, 0x32, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1b, 0x3a, 0x01,
	0x2a, 0x22, 0x16, 0x2f, 0x76, 0x31, 0x2f, 0x6d, 0x67, 0x6d, 0x74, 0x2f, 0x66, 0x67, 0x61, 0x2f,
	0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x91, 0x02, 0x0a, 0x12, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x46, 0x47, 0x41, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x12, 0x1c, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x7a, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x54, 0x75, 0x70, 0x6c, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1d,
	0x2e, 0x61, 0x75, 0x74, 0x68, 0x7a, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x54,
	0x75, 0x70, 0x6c, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0xbd, 0x01,
	0xba, 0x47, 0x91, 0x01, 0x12, 0x1a, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x20, 0x74, 0x68, 0x65,
	0x20, 0x67, 0x69, 0x76, 0x65, 0x6e, 0x20, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x1a, 0x1b, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x20, 0x74, 0x68, 0x65, 0x20, 0x67, 0x69, 0x76,
	0x65, 0x6e, 0x20, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x2a, 0x12, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x46, 0x47, 0x41, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x5a, 0x1a, 0x0a, 0x18, 0x0a, 0x14, 0x41, 0x75, 0x74, 0x68, 0x50, 0x72, 0x6f, 0x6a, 0x65,
	0x63, 0x74, 0x49, 0x64, 0x4d, 0x67, 0x6d, 0x74, 0x4b, 0x65, 0x79, 0x12, 0x00, 0x6a, 0x16, 0x0a,
	0x0d, 0x78, 0x2d, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x59, 0x61, 0x6d, 0x6c, 0x12, 0x05,
	0x12, 0x03, 0x66, 0x67, 0x61, 0x6a, 0x0e, 0x0a, 0x07, 0x78, 0x2d, 0x6f, 0x72, 0x64, 0x65, 0x72,
	0x12, 0x03, 0x12, 0x01, 0x33, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x22, 0x3a, 0x01, 0x2a, 0x22, 0x1d,
	0x2f, 0x76, 0x31, 0x2f, 0x6d, 0x67, 0x6d, 0x74, 0x2f, 0x66, 0x67, 0x61, 0x2f, 0x72, 0x65, 0x6c,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x12, 0xfa, 0x01,
	0x0a, 0x05, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x12, 0x15, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x7a, 0x76,
	0x31, 0x2e, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16,
	0x2e, 0x61, 0x75, 0x74, 0x68, 0x7a, 0x76, 0x31, 0x2e, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0xc1, 0x01, 0xba, 0x47, 0xa0, 0x01, 0x12, 0x28, 0x43,
	0x68, 0x65, 0x63, 0x6b, 0x20, 0x69, 0x66, 0x20, 0x74, 0x68, 0x65, 0x20, 0x67, 0x69, 0x76, 0x65,
	0x6e, 0x20, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x20, 0x61, 0x72, 0x65, 0x20,
	0x61, 0x6c, 0x6c, 0x6f, 0x77, 0x65, 0x64, 0x1a, 0x29, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x20, 0x69,
	0x66, 0x20, 0x74, 0x68, 0x65, 0x20, 0x67, 0x69, 0x76, 0x65, 0x6e, 0x20, 0x72, 0x65, 0x6c, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x20, 0x61, 0x72, 0x65, 0x20, 0x61, 0x6c, 0x6c, 0x6f, 0x77, 0x65,
	0x64, 0x2e, 0x2a, 0x05, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x5a, 0x1a, 0x0a, 0x18, 0x0a, 0x14, 0x41,
	0x75, 0x74, 0x68, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x4d, 0x67, 0x6d, 0x74,
	0x4b, 0x65, 0x79, 0x12, 0x00, 0x6a, 0x16, 0x0a, 0x0d, 0x78, 0x2d, 0x70, 0x75, 0x62, 0x6c, 0x69,
	0x73, 0x68, 0x59, 0x61, 0x6d, 0x6c, 0x12, 0x05, 0x12, 0x03, 0x66, 0x67, 0x61, 0x6a, 0x0e, 0x0a,
	0x07, 0x78, 0x2d, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x12, 0x03, 0x12, 0x01, 0x33, 0x82, 0xd3, 0xe4,
	0x93, 0x02, 0x17, 0x3a, 0x01, 0x2a, 0x22, 0x12, 0x2f, 0x76, 0x31, 0x2f, 0x6d, 0x67, 0x6d, 0x74,
	0x2f, 0x66, 0x67, 0x61, 0x2f, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x42, 0x77, 0xba, 0x7e, 0x3d, 0x08,
	0x01, 0x22, 0x0c, 0x67, 0x72, 0x70, 0x63, 0x61, 0x75, 0x74, 0x68, 0x7a, 0x63, 0x76, 0x31, 0x2a,
	0x10, 0x61, 0x75, 0x74, 0x68, 0x7a, 0x63, 0x61, 0x63, 0x68, 0x65, 0x63, 0x6c, 0x69, 0x65, 0x6e,
	0x74, 0x32, 0x19, 0x70, 0x6b, 0x67, 0x2f, 0x61, 0x75, 0x74, 0x68, 0x7a, 0x63, 0x61, 0x63, 0x68,
	0x65, 0x2f, 0x74, 0x65, 0x73, 0x74, 0x2f, 0x6d, 0x6f, 0x63, 0x6b, 0x73, 0x5a, 0x35, 0x67, 0x69,
	0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x64, 0x65, 0x73, 0x63, 0x6f, 0x70, 0x65,
	0x2f, 0x61, 0x75, 0x74, 0x68, 0x7a, 0x63, 0x61, 0x63, 0x68, 0x65, 0x2f, 0x70, 0x6b, 0x67, 0x2f,
	0x61, 0x75, 0x74, 0x68, 0x7a, 0x63, 0x61, 0x63, 0x68, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2f, 0x76, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
})

var file_authzcache_proto_goTypes = []any{
	(*v1.SaveDSLSchemaRequest)(nil),  // 0: authzv1.SaveDSLSchemaRequest
	(*v1.CreateTuplesRequest)(nil),   // 1: authzv1.CreateTuplesRequest
	(*v1.DeleteTuplesRequest)(nil),   // 2: authzv1.DeleteTuplesRequest
	(*v1.CheckRequest)(nil),          // 3: authzv1.CheckRequest
	(*v1.SaveDSLSchemaResponse)(nil), // 4: authzv1.SaveDSLSchemaResponse
	(*v1.CreateTuplesResponse)(nil),  // 5: authzv1.CreateTuplesResponse
	(*v1.DeleteTuplesResponse)(nil),  // 6: authzv1.DeleteTuplesResponse
	(*v1.CheckResponse)(nil),         // 7: authzv1.CheckResponse
}
var file_authzcache_proto_depIdxs = []int32{
	0, // 0: authzcv1.AuthzCache.CreateFGASchema:input_type -> authzv1.SaveDSLSchemaRequest
	1, // 1: authzcv1.AuthzCache.CreateFGARelations:input_type -> authzv1.CreateTuplesRequest
	2, // 2: authzcv1.AuthzCache.DeleteFGARelations:input_type -> authzv1.DeleteTuplesRequest
	3, // 3: authzcv1.AuthzCache.Check:input_type -> authzv1.CheckRequest
	4, // 4: authzcv1.AuthzCache.CreateFGASchema:output_type -> authzv1.SaveDSLSchemaResponse
	5, // 5: authzcv1.AuthzCache.CreateFGARelations:output_type -> authzv1.CreateTuplesResponse
	6, // 6: authzcv1.AuthzCache.DeleteFGARelations:output_type -> authzv1.DeleteTuplesResponse
	7, // 7: authzcv1.AuthzCache.Check:output_type -> authzv1.CheckResponse
	4, // [4:8] is the sub-list for method output_type
	0, // [0:4] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_authzcache_proto_init() }
func file_authzcache_proto_init() {
	if File_authzcache_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_authzcache_proto_rawDesc), len(file_authzcache_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   0,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_authzcache_proto_goTypes,
		DependencyIndexes: file_authzcache_proto_depIdxs,
	}.Build()
	File_authzcache_proto = out.File
	file_authzcache_proto_goTypes = nil
	file_authzcache_proto_depIdxs = nil
}
